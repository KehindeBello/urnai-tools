@startuml
scale 1

class Agent {
    +action_wrapper: ActionWrapper
    +model: object
    +reward_builder: object
    +state_builder: object
    
    +learn()
    +play()
    +reset()
    +step()
}

class GenericAgent {
}

class SC2Agent {
}

class ActionWrapper {
    +get_action()
    +get_action_space_dim()
    +get_actions()
    +get_excluded_actions()
    +is_action_done()
    +reset()
}

class GymWrapper {
}
class SC2Wrapper {
}
class VizdoomWrapper {
}

class StateBuilder {
    +build_state()
    +get_state_dim()
}

class FrozenlakeState {
}

class DoomState {
}

class SC2State{
}

class LearningModel {
    +state_builder: object
    +reward_builder: object

    +choose_action()
    +learn()
    +load()
    +predict()
    +save()
}

class DeepQLearning {
}

class QLearning {
}

class PolicyGradient {
}

class Env {
    +close()
    +reset()
    +start()
    +step()
}

class GymEnv {
}

class SC2Env {
}

class VizdoomEnv {
}

class RewardBuilder {
    +get_reward()
}

class DefaultReward {
}

class FrozenlakeReward {
}

class SC2Reward {
}

class Trainer {
    +play()
    +train()
}

Agent <|-- GenericAgent
Agent <|-- SC2Agent
Agent <.. Trainer

ActionWrapper <|-- GymWrapper
ActionWrapper <|-- SC2Wrapper
ActionWrapper <|-- VizdoomWrapper
ActionWrapper *-- LearningModel

StateBuilder <|-- FrozenlakeState
StateBuilder <|-- SC2State
StateBuilder <|-- DoomState
StateBuilder *-- LearningModel

LearningModel <|-- QLearning
LearningModel <|-- DeepQLearning
LearningModel <|-- PolicyGradient
LearningModel *-- Agent

Env <|-- GymEnv
Env <|-- SC2Env
Env <|-- VizdoomEnv
Env <.. Trainer

RewardBuilder <|-- DefaultReward
RewardBuilder <|-- FrozenlakeReward
RewardBuilder <|-- SC2Reward
RewardBuilder *-- Agent

' ApplicationUser <|-- Speaker
' ApplicationUser <|-- Attendee
' Speaker "1" *-- "*" Topic
@enduml